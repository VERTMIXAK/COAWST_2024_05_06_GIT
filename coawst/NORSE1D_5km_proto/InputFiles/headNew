netcdf NORSE1D_5km {
dimensions:
	xi_psi = 6 ;
	xi_rho = 7 ;
	xi_u = 6 ;
	xi_v = 7 ;
	eta_psi = 6 ;
	eta_rho = 7 ;
	eta_u = 7 ;
	eta_v = 6 ;
	one = 1 ;
	two = 2 ;
	bath = UNLIMITED ; // (0 currently)
variables:
	double xl ;
		xl:long_name = "domain length in the XI-direction" ;
		xl:units = "meter" ;
	double el ;
		el:long_name = "domain length in the ETA-direction" ;
		el:units = "meter" ;
	char JPRJ(two) ;
		JPRJ:long_name = "Map projection type" ;
		JPRJ:option_ME = "Mercator" ;
		JPRJ:option_ST = "Stereographic" ;
		JPRJ:option_LC = "Lambert conformal conic" ;
	double PLAT(two) ;
		PLAT:long_name = "Reference latitude(s) for map projection" ;
		PLAT:units = "degree_north" ;
	double PLONG ;
		PLONG:long_name = "Reference longitude for map projection" ;
		PLONG:units = "degree_east" ;
	double ROTA ;
		ROTA:long_name = "Rotation angle for map projection" ;
		ROTA:units = "degree" ;
	char JLTS(two) ;
		JLTS:long_name = "How limits of map are chosen" ;
		JLTS:option_CO = "P1, .. P4 define two opposite corners of domain" ;
		JLTS:option_MA = "Maximum (whole world)" ;
		JLTS:option_AN = "Angles - P1..P4 define angles to edge of domain" ;
		JLTS:option_LI = "Limits - P1..P4 define limits in u,v space" ;
	double P1 ;
		P1:long_name = "Map limit parameter number 1" ;
	double P2 ;
		P2:long_name = "Map limit parameter number 2" ;
	double P3 ;
		P3:long_name = "Map limit parameter number 3" ;
	double P4 ;
		P4:long_name = "Map limit parameter number 4" ;
	float XOFF ;
		XOFF:long_name = "Offset in x direction" ;
		XOFF:units = "meter" ;
	float YOFF ;
		YOFF:long_name = "Offset in y direction" ;
		YOFF:units = "meter" ;
	double depthmin ;
		depthmin:long_name = "Shallow bathymetry clipping depth" ;
		depthmin:units = "meter" ;
	double depthmax ;
		depthmax:long_name = "Deep bathymetry clipping depth" ;
		depthmax:units = "meter" ;
	int spherical ;
		spherical:long_name = "Grid type logical switch" ;
		spherical:flag_values = "0, 1" ;
		spherical:flag_meanings = "Cartesian, spherical" ;
	double f0 ;
		f0:long_name = "Coriolis parameter central value on a beta-plane" ;
		f0:_FillValue = 0. ;
	double dfdy ;
		dfdy:long_name = "Coriolis parameter gradient on a beta-plane" ;
		dfdy:_FillValue = 0. ;
	double hraw(bath, eta_rho, xi_rho) ;
		hraw:long_name = "Working bathymetry at RHO-points" ;
		hraw:units = "meter" ;
	double h(eta_rho, xi_rho) ;
		h:long_name = "Final bathymetry at RHO-points" ;
		h:units = "meter" ;
	double f(eta_rho, xi_rho) ;
		f:long_name = "Coriolis parameter at RHO-points" ;
		f:units = "second-1" ;
	double pm(eta_rho, xi_rho) ;
		pm:long_name = "curvilinear coordinate metric in XI" ;
		pm:units = "meter-1" ;
	double pn(eta_rho, xi_rho) ;
		pn:long_name = "curvilinear coordinate metric in ETA" ;
		pn:units = "meter-1" ;
	double dndx(eta_rho, xi_rho) ;
		dndx:long_name = "XI-derivative of inverse metric factor pn" ;
		dndx:units = "meter" ;
	double dmde(eta_rho, xi_rho) ;
		dmde:long_name = "ETA-derivative of inverse metric factor pm" ;
		dmde:units = "meter" ;
	double x_rho(eta_rho, xi_rho) ;
		x_rho:long_name = "X-location of RHO-points" ;
		x_rho:units = "meter" ;
	double y_rho(eta_rho, xi_rho) ;
		y_rho:long_name = "Y-location of RHO-points" ;
		y_rho:units = "meter" ;
	double x_psi(eta_psi, xi_psi) ;
		x_psi:long_name = "X-location of PSI-points" ;
		x_psi:units = "meter" ;
	double y_psi(eta_psi, xi_psi) ;
		y_psi:long_name = "Y-location of PSI-points" ;
		y_psi:units = "meter" ;
	double x_u(eta_u, xi_u) ;
		x_u:long_name = "X-location of U-points" ;
		x_u:units = "meter" ;
	double y_u(eta_u, xi_u) ;
		y_u:long_name = "Y-location of U-points" ;
		y_u:units = "meter" ;
	double x_v(eta_v, xi_v) ;
		x_v:long_name = "X-location of V-points" ;
		x_v:units = "meter" ;
	double y_v(eta_v, xi_v) ;
		y_v:long_name = "Y-location of V-points" ;
		y_v:units = "meter" ;
	double lat_rho(eta_rho, xi_rho) ;
		lat_rho:long_name = "latitude of RHO-points" ;
		lat_rho:units = "degree_north" ;
		lat_rho:standard_name = "latitude" ;
	double lon_rho(eta_rho, xi_rho) ;
		lon_rho:long_name = "longitude of RHO-points" ;
		lon_rho:units = "degree_east" ;
		lon_rho:standard_name = "longitude" ;
	double lat_psi(eta_psi, xi_psi) ;
		lat_psi:long_name = "latitude of PSI-points" ;
		lat_psi:units = "degree_north" ;
		lat_psi:standard_name = "latitude" ;
	double lon_psi(eta_psi, xi_psi) ;
		lon_psi:long_name = "longitude of PSI-points" ;
		lon_psi:units = "degree_east" ;
		lon_psi:standard_name = "longitude" ;
	double lat_u(eta_u, xi_u) ;
		lat_u:long_name = "latitude of U-points" ;
		lat_u:units = "degree_north" ;
		lat_u:standard_name = "latitude" ;
	double lon_u(eta_u, xi_u) ;
		lon_u:long_name = "longitude of U-points" ;
		lon_u:units = "degree_east" ;
		lon_u:standard_name = "longitude" ;
	double lat_v(eta_v, xi_v) ;
		lat_v:long_name = "latitude of V-points" ;
		lat_v:units = "degree_north" ;
		lat_v:standard_name = "latitude" ;
	double lon_v(eta_v, xi_v) ;
		lon_v:long_name = "longitude of V-points" ;
		lon_v:units = "degree_east" ;
		lon_v:standard_name = "longitude" ;
	double mask_rho(eta_rho, xi_rho) ;
		mask_rho:long_name = "mask on RHO-points" ;
		mask_rho:flag_values = "0., 1." ;
		mask_rho:flag_meanings = "land, water" ;
	double mask_u(eta_u, xi_u) ;
		mask_u:long_name = "mask on U-points" ;
		mask_u:flag_values = "0., 1." ;
		mask_u:flag_meanings = "land, water" ;
	double mask_v(eta_v, xi_v) ;
		mask_v:long_name = "mask on V-points" ;
		mask_v:flag_values = "0., 1." ;
		mask_v:flag_meanings = "land, water" ;
	double mask_psi(eta_psi, xi_psi) ;
		mask_psi:long_name = "mask on PSI-points" ;
		mask_psi:flag_values = "0., 1." ;
		mask_psi:flag_meanings = "land, water" ;
	double angle(eta_rho, xi_rho) ;
		angle:long_name = "angle between XI-axis and EAST" ;
		angle:units = "radian" ;
	double wtype_grid(eta_rho, xi_rho) ;
		wtype_grid:_FillValue = 1.e+30 ;
		wtype_grid:long_name = "spatially variable Jerlov water type." ;
		wtype_grid:units = "N/A" ;

// global attributes:
		:type = "Gridpak file" ;
		:gridid = "NORSE1D_5km" ;
		:history = "Gridpak, Version 5.3" ;
		:CPP-options = " DCOMPLEX, DBLEPREC, ELLIPSOID, NISKINE, DRAW_COASTS, PLOTS," ;
}
